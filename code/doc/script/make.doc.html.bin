#!/bin/sh

# make.doc.html.bin
# =================
# Author: R.J.Barnes
#
# Purpose: Constructs web pages from XML documentation
#
# Syntax:  make.doc.html.bin build xmlfile url www pgsfx
#
# Description:
#
# Uses xmldoc to generate HTML web pages from the XML documentation source.
# The script uses a series of configuration scripts which tell xmldoc what
# information should be extracted from the XML source and how it should
# be formatted. Some of these configuration scripts are used to find
# out information from the XML.
# 

# build is the source directory for configuration and scripts
# xmlname is the original name of the XML source file
# fname is XML source file actually read
# url is the URL pathname where the webpages will reside 
# www is the pathname to the directory which will store the html
# pgsfx is the suffix to apply to the page generator script

#
# $Log: make.doc.html.bin,v $
# Revision 1.12  2007/04/18 18:23:12  code
# Added code to test for presence of ppmtogif or use dummy file instead.
#
# Revision 1.11  2007/04/17 20:58:47  code
# Removed redundant "tail" on selecting directory.
#
# Revision 1.10  2007/04/10 17:03:50  code
# Removed -v option from mkdir
#
# Revision 1.9  2007/03/06 14:31:32  code
# Fixed typo.
#
# Revision 1.8  2007/03/06 01:15:20  code
# Switched to URLBASE
#
# Revision 1.7  2007/03/05 22:21:30  code
# Make documentation for binaries (low level script)
#
# Revision 1.6  2007/03/02 20:56:15  code
# Added author
#
# Revision 1.5  2007/03/02 20:51:29  code
# General purpose for both web and local documentation
#
# Revision 1.4  2007/03/02 01:17:46  code
# Fixed minor typos.
#
# Revision 1.3  2007/03/02 00:50:04  code
# Modifications to handle different targets and to centralize
# variables.
#
# Revision 1.2  2007/03/01 21:20:24  code
# Changed locations of some configuration files.
#
# Revision 1.1  2007/03/01 20:51:12  code
# Initial revision
#
#

build=${1}
xmlname=${2}
fname=${3}
url=${4}
www=${5}
pgsfx=${6}
ppmtogif=${7}
#
# tmp is the working directory
#

tmp=${build}/tmp

# These configuration files are used to get information from the
# XML for use later on.
#
#  nmecfg - extracts the library name.
#  lctcfg - extracts the location of the library.

nmecfg="${build}/cfg/bin/binname.cfg.xml"
lctcfg="${build}/cfg/bin/binlocation.cfg.xml"


# This configuration files generate the HTML pages.
#

pgcfg="${build}/cfg/bin/binary.page.${pgsfx}.cfg.xml"


#
# nmexml - a temporary XML file containing the library name.
#

nmexml="${tmp}/binname.xml"

binname=`$BINPATH/xmldoc . ${nmecfg} ${fname}`
binloct=`$BINPATH/xmldoc . ${lctcfg} ${fname}`

echo "make.doc.html.bin"
echo "================="
date
echo "build:" ${build}
echo "source:" ${fname}
echo "name:" ${xmlname}
echo "URL:" ${url}
echo "www path:"${www}
echo "page  suffix:"${pgsfx}
 
echo "Binary Name:" ${binname}
echo "Binary Location:" ${binloct}
echo


# 
# Take apart the location string so that we can build a navigation link
#

ltree=${binloct%%$binname}
path=""
str=""
while test -n "${ltree}"
  do
    dir=${ltree%%/*}
    path=${path}"/"${dir}
    str=${str}"&lt;a href="${url}${path}"/index.html&gt;"${dir}"&lt;/a&gt;/"
    ltree=${ltree#*/}
  done

#
# Create the temporary XML file containing the binary name and
# the URL of the binary index page.
#

home=${url}/index.html
root=${url}/src.bin/root.html

echo "<table>" > ${nmexml}
echo "<entry>" >> ${nmexml}
echo "<search>BINARY</search>" >> ${nmexml}
echo "<replace>"${binname}"</replace>" >> ${nmexml}
echo "</entry>" >> ${nmexml}

echo "<entry>" >> ${nmexml}
echo "<search>HOME</search>" >> ${nmexml}
echo "<replace>&lt;a href="${home}"&gt;Home&lt;/a&gt;</replace>" \
     >> ${nmexml}
echo "</entry>" >> ${nmexml}


echo "<entry>" >> ${nmexml}
echo "<search>PATH</search>" >> ${nmexml}
echo "<replace>"${str}"</replace>" >> ${nmexml}
echo "</entry>" >> ${nmexml}

echo "<entry>" >> ${nmexml}
echo "<search>ROOT</search>" >> ${nmexml}
echo "<replace>&lt;a href="${root}"&gt;Index&lt;/a&gt;</replace>" \
     >> ${nmexml}
echo "</entry>" >> ${nmexml}

echo "<entry>" >> ${nmexml}
echo "<search>URLBASE</search>" >> ${nmexml}
echo "<replace>${url}</replace>" \
     >> ${nmexml}
echo "</entry>" >> ${nmexml}


echo "<entry>" >> ${nmexml}
echo "<search>XML</search>" >> ${nmexml}
echo "<replace>&lt;a href="${xmlname}"&gt;"${xmlname}"&lt;/a&gt;</replace>" \
     >> ${nmexml}
echo "</entry>" >> ${nmexml}



echo "</table>" >> ${nmexml}

#
# Each binary is installed in a unique directory which contains
# sub-directories for extra files such as examples and images.
#

echo "Building directory structure:"
echo ${www}/${binloct}

if test ! -d ${www}/${binloct}
  then 
    mkdir -p ${www}/${binloct}
  fi

if test ! -d ${www}/${binloct}/img
  then 
    mkdir ${www}/${binloct}/img
  fi


# Determine if the binary has a version number. If it has
# use the highest version number as the source
#
#


binpath=${CODEBASE}/${binloct}

if test ! -d ${binpath}
then
  bpath=${binloct%/*}
  bname=${binloct##*/}
  blist=`find ${CODEBASE}/${bpath} -name "${bname}.?.??" | sort`
  binpath=${blist##* }
fi



#
# If rplot files exist, render them as PostScript and gif, and copy them to
# the web


if test -d ${binpath}/doc/rplot
then 
  flist=`ls -1 ${binpath}/doc/rplot/*.rp.xml.gz`
  for fn in $flist
  do
    fleaf=${fn##*/}
    root=${fleaf%%.rp.xml.gz}

    gunzip -c  ${fn} > \
                ${tmp}/${root}.rp.xml
    if test -n "${ppmtogif}" 
    then 
      ${BINPATH}/rplot -ppm ${tmp}/${root}.rp.xml | \
                ppmquant 256 | ppmtogif > ${www}/${binloct}/img/${root}.gif
    else 
      cp ${build}/img/dummy.gif  ${www}/${binloct}/img/${root}.gif
    fi

    ${BINPATH}/rplot -ps ${tmp}/${root}.rp.xml | \
         gzip -c > ${www}/${binloct}/img/${root}.ps.gz

    cp ${fn} ${www}/${binloct}/img
    rm -f ${tmp}/${root}.rp.xml
  done
fi

#
# If postscript files exist, and copy them to
# the web


if test -d ${binpath}/doc/ps
then 
  flist=`ls -1 ${binpath}/doc/ppm/*.ps.gz`
  for fn in $flist
  do

    cp ${fn} ${www}/${binloct}/img
   
  done
fi


#
# If ppm files exist, copy them to
# the web

if test -d ${binpath}/doc/ppm
then 
  flist=`ls -1 ${binpath}/doc/ppm/*.ppm.gz`
  for fn in $flist
  do
    fleaf=${fn##*/}
    root=${fleaf%%.ppm.gz}

    if test -n "${ppmtogif}" 
    then 
      gunzip -c ${fn} | ppmquant 256 | ppmtogif > \
                   ${www}/${binloct}/img/${root}.gif
    else
      cp ${build}/img/dummy.gif ${www}/${binloct}/img/${root}.gif
    fi 

  done
fi



echo "Building:${www}/${binloct}/index.html" 

$BINPATH/xmldoc ${build} ${pgcfg} ${fname} \
                     > ${www}/${binloct}/index.html

chmod a+x ${www}/${binloct}/index.html

#
# Copy the xml version of the documentation
#

cp ${fname} ${www}/${binloct}/${xmlname}

rm -f ${nmexml}






