<?xml version="1.0" encoding="ISO-8859-1"?>
<library>
<name>gtable</name>
<location>src.lib/superdarn/gtable</location>
<function>
<name>GridTableMap</name>
<location>src.lib/superdarn/gtable</location>
<header>general/gtable.h</header>
<syntax>void GridTableMap(<sn href="structGridTable.html">struct GridTable</sn> *ptr,<sn href="&root;/src.lib/superdarn/scan/structRadarScan.html">struct RadarScan</sn> *scan,<sn href="&root;/src.lib/superdarn/radar/structRadarSite.html">struct RadarSite</sn> *pos,int tlen,int iflg,double alt);</syntax>
<description><p>The <fn href="GridTableMap.html">GridTableMap</fn> function maps radar scan data to an equi-area grid in geomagnetic coordinates.</p>
<p>The gridded data stored in the structure pointed to by the argument <ar>ptr</ar>.</p>
<p>The structure containing the  radar scan data to map is pointed to by the argument <ar>scan</ar>. The hardware information for the radar is pointed to by the argument <ar>pos</ar>.</p>
<p>If the argument <ar>iflg</ar> has a non-zero value then the mapping will be performed using an inertial reference frame; the component of the line of sight velocities due to the Earth's rotation is subtracted.</p>
<p>The final argument <ar>alt</ar> sets the altitude at which the mapping is performed</p>

</description>
<example type="source">GridTableMap.c</example>
</function>

<function>
<name>GridTableTest</name>
<location>src.lib/superdarn/gtable</location>
<header>superdarn/gtable.h</header>
<syntax>int GridTableTest(<sn href="structGridTable.html">struct GridTable</sn> *ptr,<sn href="&root;/src.lib/superdarn/scan/structRadarScan.html">struct RadarScan</sn> *scan,int tlen);</syntax>
<description><p>The <fn href="GridTableTest.html">GridTableTest</fn> function tests whether gridded data should be written to a file. The argument <ar>ptr</ar> is a pointer to the structure containing the gridded data.</p>
<p>The argument <ar>scan</ar> points to the next setof radar scan data to be fitted to the grid and the argument <ar>tlen</ar> is the integration time for each set of gridded data.</p>
</description>
<returns>Returns a non-zero value if the data should be written.</returns>
<example type="source">GridTableTest.c</example>

</function>



<structure>
 <name>GridPnt</name>
 <location>src.lib/superdarn/grid</location>
 <header>superdarn/griddata.h</header>
 <struct>

    <member>
      <code>int cnt;</code>
      <description>Number of data points that map to this cell.</description>
    </member>

   <member>
      <code>int npix;</code>
      <description>Number of range points that map to this cell.</description>
    </member>

   <member>
      <code>int ref;</code>
      <description>Grid cell reference number.</description>
    </member>



    <member>
      <code>double mlat;</code>
      <description>Magnetic latitude of data point.</description>
    </member>

    <member>
      <code>double mlon;</code>
      <description>Magnetic longitude of data point.</description>
    </member>

    <member>
      <code>double azimuth;</code>
      <description>Magnetic azimuth of data point.</description>
    </member>


    <member>
     <struct>
       <member>
          <code>double median;</code>
          <description>Median value.</description>
       </member>
       <member>
          <code>double sd;</code>
          <description>Standard deviation.</description>
       </member>
      </struct>
      <code>vel;</code>
      <description>Velocity data.</description>
   </member>

   <member>
     <struct>
       <member>
          <code>double median;</code>
          <description>Median value.</description>
       </member>
       <member>
          <code>double sd;</code>
          <description>Standard deviation.</description>
       </member>
      </struct>
      <code>vel;</code>
      <description>Power data.</description>
   </member>

   <member>
     <struct>
       <member>
          <code>double median;</code>
          <description>Median value.</description>
       </member>
       <member>
          <code>double sd;</code>
          <description>Standard deviation.</description>
       </member>
      </struct>
      <code>vel;</code>
      <description>Spectral width data.</description>
   </member>

</struct>
<description>
<p>The <sn href="structGridPnt.html">struct GridPnt</sn> structure stores information about a single data point in a set of gridded data.</p>
</description>
</structure>



<structure>
 <name>GridTable</name>
 <location>src.lib/superdarn/gtable</location>
 <header>superdarn/gtable.h</header>
 <struct>

    <member>
      <code>double st_time;</code>
      <description>Start time of the data, specified as seconds from 0:00UT January 1, 1970.</description>
    </member>

    <member>
      <code>double ed_time;</code>
      <description>End time of the data, specified as seconds from 0:00UT January 1, 1970.</description>
    </member>

    <member>
      <code>int chn;</code>
      <description>Channel number for a stereo radar.</description>
    </member>

    <member>
      <code>int st_id;</code>
      <description>Station identifier number.</description>
    </member>

   <member>
      <code>int prog_id;</code>
      <description>Control program identifier number.</description>
    </member>

    <member>
      <code>int nscan;</code>
      <description>Number of scans included in the analysis.</description>
    </member>

   <member>
      <code>int npnt;</code>
      <description>Number of grid points produces by the analysis.</description>
    </member>

   <member>
      <code>int frang[MAX_BEAM];</code>
      <description>Distance to the first range for each beam.</description>
    </member>

   <member>
      <code>int rsep[MAX_BEAM];</code>
      <description>Range separation for each beam.</description>
    </member>

   <member>
      <code>int rxrise[MAX_BEAM];</code>
      <description>Receiver rise time for each beam.</description>
    </member>




   <member>
      <code>double freq;</code>
      <description>Frequency that the radar was using for this period.</description>
    </member>

   <member>
     <struct>
       <member>
          <code>double mean;</code>
          <description>Mean noise value for this period.</description>
       </member>
       <member>
          <code>double sd;</code>
          <description>Standard deviation of the noise for this period.</description>
       </member>
      </struct>
      <code>noise;</code>
      <description>Noise statistics.</description>
   </member>

   <member>
      <code>int gsct;</code>
      <description>Ground scatter flag.</description>
    </member>

    <member>
      <code>int min[4];</code>
      <description>Filter lower thresholds.</description>
    </member>
    <member>
      <code>int max[4];</code>
      <description>Filter upper thresholds.</description>
    </member>


   <member>
      <code>int ltable[MAX_RANGE*MAX_BEAM];</code>
      <description>Look up table that relates beam and range to the grid cell table.</description>
    </member>

    <member>
      <code>int azm[MAX_RANGE*MAX_BEAM];</code>
      <description>Calculated azimuths for each range cell.</description>
    </member>

   <member>
      <code>int itab[MAX_RANGE*MAX_BEAM];</code>
      <description>Calculated velocity component to subtract for the inertial reference frame.</description>
    </member>

  <member>
      <code>int pnum;</code>
      <description>Number of grid cells in the radar field of view.</description>
    </member>

  <member>
      <code><sn href="structGridPnt.html">struct GridPnt</sn> *pnt;</code>
      <description>Pointer to an array of structures containing the grid cells in the radar field of view .</description>
    </member>
</struct>

<description>
<p>The <sn href="structGridTable.html">struct GridTable</sn> structure stores information used to grid radar scan data.</p>
</description>
</structure>

</library>
